// @dart=3.9
import 'package:solana/src/rpc/dto/context.dart';

export 'account.dart';
export 'account_data/account_data.dart';
export 'account_data/spl_token_program/token_account_data_info.dart';
export 'account_data/spl_token_program/token_program_account_data.dart';
export 'account_key.dart';
export 'balance.dart';
export 'block.dart';
export 'block_commitment.dart';
export 'block_production.dart';
export 'blockhash.dart';
export 'by_identity_value.dart';
export 'circulation_status.dart';
export 'cluster_node.dart';
export 'commitment.dart';
export 'confirmation_status.dart';
export 'context.dart';
export 'data_slice.dart';
export 'encoding.dart';
export 'epoch_credits.dart';
export 'epoch_info.dart';
export 'epoch_schedule.dart';
export 'fee_calculator.dart';
export 'fee_calculator_for_blockhash.dart';
export 'fee_rate_governor.dart';
export 'fee_rate_governor_value.dart';
export 'fees.dart';
export 'highest_snapshot_slot.dart';
export 'identity.dart';
export 'inflation_governor.dart';
export 'inflation_rate.dart';
export 'inflation_reward.dart';
export 'inner_instruction.dart';
export 'instruction.dart';
export 'large_account.dart';
export 'latest_blockhash.dart';
export 'logs.dart';
export 'meta.dart';
export 'parsed_message/parsed_message.dart';
export 'perf_sample.dart';
export 'program_account.dart';
export 'program_data_filter.dart';
export 'program_filter.dart';
export 'range.dart';
export 'recent_blockhash.dart';
export 'reward.dart';
export 'reward_type.dart';
export 'signature_status.dart';
export 'simulate_transaction_accounts.dart';
export 'slot.dart';
export 'solana_version.dart';
export 'stake_activation.dart';
export 'stake_activation_state.dart';
export 'stake_minimum_delegation.dart';
export 'supply.dart';
export 'token_accounts_filter.dart';
export 'token_amount.dart';
export 'token_balance.dart';
export 'token_largest_account.dart';
export 'transaction.dart';
export 'transaction_detail_level.dart';
export 'transaction_details.dart';
export 'transaction_message.dart';
export 'transaction_message_header.dart';
export 'transaction_signature_information.dart';
export 'transaction_status.dart';
export 'vote_account.dart';
export 'vote_accounts.dart';

extension FutureContextResultExt<T> on Future<ContextResult<T>> {
  Future<T> get value async => (await this).value;
}
